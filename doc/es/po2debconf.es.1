.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PO2DEBCONF 1"
.TH PO2DEBCONF 1 "2018-11-20" "" "po-debconf"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NOMBRE"
.IX Header "NOMBRE"
po2debconf \- Fusiona un fichero de plantillas original con ficheros \s-1PO\s0
.SH "SINOPSIS"
.IX Header "SINOPSIS"
\&\fBpo2debconf\fR [\fB\-v\fR] [\fB\-h\fR] [\fB\-\-podir=\f(BIdirectorio\fB\fR] [\fB\-o \f(BIfichero\fB\fR]
[\fB\-e \f(BIcadena\fB\fR] \fIoriginal\fR
.SH "DESCRIPCIÓN"
.IX Header "DESCRIPCIÓN"
Este programa analiza todos los ficheros \s-1PO\s0 y un único fichero de
plantillas, \fItemplates\fR, generando un fichero de plantillas de debconf que
contiene todas las traducciones, similar al generado por
\&\fBdebconf\-mergetemplate\fR\|(1) (en el paquete \f(CW\*(C`debconf\-utils\*(C'\fR). Por omisión,
busca ficheros \s-1PO\s0 en el subdirectorio \fIpo\fR bajo la ubicación del fichero
original.
.PP
Los códigos de idioma \fBno\fR y \fBnb\fR se tratan de forma especial para
facilitar la transición del código de idioma Noruego BokmåI. Si
\&\fIno.po\fR existe, se debería renombrar a \fInb.po\fR. Si usa \fInb.po\fR, ambas
traducciones \f(CW\*(C`\-no\*(C'\fR y \f(CW\*(C`\-nb\*(C'\fR estarán disponibles en el fichero de
plantillas.
.PP
Las líneas que comienzan con un signo \f(CW\*(C`#\*(C'\fR son comentarios en los ficheros
de plantillas. Son útiles para dar indicaciones a los traductores, y
\&\fBpo2debconf\fR los descarta. La versión 1.0 de \f(CW\*(C`po2debconf\*(C'\fR introduce
comentarios especiales, con la forma \f(CW\*(C`#flag:\f(CInorma\f(CW\*(C'\fR. \f(CW\*(C`#flag:partial\*(C'\fR es
la única norma interpretada por \fBpo2debconf\fR. Habitualmente, cuando un
campo está compuesto por varios párrafos (como \f(CW\*(C`_\|_Choices\*(C'\fR y
\&\f(CW\*(C`_Description\*(C'\fR), se traduce si todos los párrafos lo están. Las cadenas
traducidas se pueden mezclar con cadenas sin traducir si un campo contiene
\&\f(CW\*(C`#flag:partial\*(C'\fR.
.SH "OPCIONES"
.IX Header "OPCIONES"
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Muestra un resumen del uso y cierra.
.IP "\fB\-v\fR, \fB\-\-verbose\fR" 4
.IX Item "-v, --verbose"
Procesa en modo informativo.
.IP "\fB\-\-podir=\f(BIdirectorio\fB\fR" 4
.IX Item "--podir=directorio"
Define el directorio de los ficheros \s-1PO.\s0 El comportamiento predefinido es
buscar ficheros \s-1PO\s0 en el subdirectorio \fIpo\fR bajo la ubicación del fichero
original.
.IP "\fB\-o\fR, \fB\-\-output=\f(BIfichero\fB\fR" 4
.IX Item "-o, --output=fichero"
Define el nombre del fichero de salida (por omisión, la salida estándar).
.IP "\fB\-e\fR, \fB\-\-encoding=\f(BIcadena\fB\fR" 4
.IX Item "-e, --encoding=cadena"
Convierte la codificación. El argumento puede contener tres valores: \f(CW\*(C`utf8\*(C'\fR
(convierte a \s-1UTF\-8\s0), \f(CW\*(C`po\*(C'\fR (no modifica la codificación) y \f(CW\*(C`popular\*(C'\fR
(convierte la codificación de los ficheros de entrada dependiendo de su
idioma; la variable de entorno \f(CW\*(C`PODEBCONF_ENCODINGS\*(C'\fR debe apuntar al nombre
de un fichero que contiene el mapa de codificación).
.Sp
Así, un nombre de fichero tendría este aspecto:
.Sp
.Vb 7
\&  #
\&  #   La celda es un signo de comentario
\&  #
\&  cs       ISO\-8859\-2
\&  da       ISO\-8859\-1
\&  de       ISO\-8859\-1
\&  el       ISO\-8859\-7
.Ve
.Sp
etc.
.Sp
Anteriormente, la codificación predefinida era \f(CW\*(C`popular\*(C'\fR, y se ha migrado a
\&\f(CW\*(C`utf8\*(C'\fR a partir de la versión 0.9.0 de debconf.
.SH "FORMATO DE SALIDA"
.IX Header "FORMATO DE SALIDA"
El formato de plantilla ha cambiado a partir de la versión 1.2.0 de
debconf. La codificación es parte del nombre de un campo, esto es,
\&\f(CW\*(C`foo\-\f(CIidioma\f(CW.\f(CIcodificación\f(CW\*(C'\fR. Cuando una versión anterior de debconf
encuentra un campo así lo ignora silenciosamente, lo que quiere decir que se
muestra el texto original.
.PP
Si existe, un fichero \fIpo/output\fR puede sustituir los valores predefinidos
de codificación y formato de salida. Contiene una sola línea con dos
campos. El primer campo es el formato de salida (actualmente, los valores
válidos son «1» para campos con la forma \f(CW\*(C`foo\-\f(CIidioma\f(CW\*(C'\fR, y «2» para
\&\f(CW\*(C`foo\-\f(CIidioma\f(CW.\f(CIcodificación\f(CW\*(C'\fR), y el segundo campo es la
codificación. Esto es:
.PP
.Vb 1
\&   echo \*(Aq2 utf8\*(Aq > po/output
.Ve
.PP
Indica a \fBpo2debconf\fR que convierta texto a \s-1UTF\-8.\s0
.PP
El formato de salida se define con «2» si la codificación se define como
\&\f(CW\*(C`po\*(C'\fR o \f(CW\*(C`utf8\*(C'\fR, para así evitar que versiones anteriores de debconf
muestren texto con una codificación incorrecta.
.SH "VÉASE TAMBIÉN"
.IX Header "VÉASE TAMBIÉN"
\&\fBdebconf\-gettextize\fR\|(1), \fBdebconf\-updatepo\fR\|(1), \fBpo\-debconf\fR\|(7).
.SH "AUTOR"
.IX Header "AUTOR"
.Vb 1
\&  Denis Barbier <barbier@linuxfr.org>
.Ve
.SH "TRADUCCIÓN"
.IX Header "TRADUCCIÓN"
.Vb 1
\&  Omar Campagne Polaino <ocampagne@gmail.com>, 2010.
\&  
\&  Esta traducción se ha realizado como parte del equipo de
\&  traducción al español de Debian, <debian\-l10n\-spanish.org>.
.Ve
